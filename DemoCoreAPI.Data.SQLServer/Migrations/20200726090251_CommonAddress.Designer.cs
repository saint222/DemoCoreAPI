// <auto-generated />
using System;
using DemoCoreAPI.Data.SQLServer;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DemoCoreAPI.Data.SQLServer.Migrations
{
    [DbContext(typeof(ApiContext))]
    [Migration("20200726090251_CommonAddress")]
    partial class CommonAddress
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DemoCoreAPI.DomainModels.Models.AddressDb", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("District")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("HouseNumber")
                        .HasColumnType("int");

                    b.Property<string>("Locality")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<long>("ParentDbId")
                        .HasColumnType("bigint");

                    b.Property<long>("PrincipalDbId")
                        .HasColumnType("bigint");

                    b.Property<long>("PupilDbId")
                        .HasColumnType("bigint");

                    b.Property<int>("Region")
                        .HasColumnType("int");

                    b.Property<long>("SchoolDbId")
                        .HasColumnType("bigint");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("ParentDbId")
                        .IsUnique();

                    b.HasIndex("PrincipalDbId")
                        .IsUnique();

                    b.HasIndex("PupilDbId")
                        .IsUnique();

                    b.HasIndex("SchoolDbId")
                        .IsUnique();

                    b.ToTable("AddressDb");
                });

            modelBuilder.Entity("DemoCoreAPI.DomainModels.Models.AdminDb", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Patronymic")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Admins");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            DateOfBirth = new DateTime(1990, 3, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "saint12maloj@gmail.com",
                            FirstName = "Aleksandr",
                            LastName = "Kalyuganov",
                            Password = "qqLQK/L5n5GqeiaCEkxVrUxlkbAWMmPUlOBSmlGXnPA=",
                            Patronymic = "Anatoljevich",
                            Role = 0
                        });
                });

            modelBuilder.Entity("DemoCoreAPI.DomainModels.Models.ClassDb", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Grade")
                        .HasColumnType("int");

                    b.Property<int>("Letter")
                        .HasColumnType("int");

                    b.Property<long?>("SchoolId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("SchoolId");

                    b.ToTable("Classes");
                });

            modelBuilder.Entity("DemoCoreAPI.DomainModels.Models.ClassTeacherDb", b =>
                {
                    b.Property<long>("ClassDbId")
                        .HasColumnType("bigint");

                    b.Property<long>("TeacherDbId")
                        .HasColumnType("bigint");

                    b.HasKey("ClassDbId", "TeacherDbId");

                    b.HasIndex("TeacherDbId");

                    b.ToTable("ClassTeachers");
                });

            modelBuilder.Entity("DemoCoreAPI.DomainModels.Models.ParentDb", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Patronymic")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Parents");
                });

            modelBuilder.Entity("DemoCoreAPI.DomainModels.Models.ParentPupilDb", b =>
                {
                    b.Property<long>("ParentDbId")
                        .HasColumnType("bigint");

                    b.Property<long>("PupilDbId")
                        .HasColumnType("bigint");

                    b.HasKey("ParentDbId", "PupilDbId");

                    b.HasIndex("PupilDbId");

                    b.ToTable("ParentPupils");
                });

            modelBuilder.Entity("DemoCoreAPI.DomainModels.Models.PrincipalDb", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Patronymic")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.Property<long?>("SchoolDbId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("SchoolDbId")
                        .IsUnique()
                        .HasFilter("[SchoolDbId] IS NOT NULL");

                    b.ToTable("Principals");
                });

            modelBuilder.Entity("DemoCoreAPI.DomainModels.Models.PupilDb", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("ClassId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Patronymic")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.Property<long?>("SchoolId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("ClassId");

                    b.HasIndex("SchoolId");

                    b.ToTable("Pupils");
                });

            modelBuilder.Entity("DemoCoreAPI.DomainModels.Models.SchoolAddressDb", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("District")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("HouseNumber")
                        .HasColumnType("int");

                    b.Property<string>("Locality")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("Region")
                        .HasColumnType("int");

                    b.Property<long>("SchoolDbId")
                        .HasColumnType("bigint");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("SchoolDbId");

                    b.ToTable("SchoolAddresses");
                });

            modelBuilder.Entity("DemoCoreAPI.DomainModels.Models.SchoolDb", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("SchoolNumber")
                        .HasColumnType("int")
                        .HasMaxLength(999);

                    b.HasKey("Id");

                    b.ToTable("Schools");
                });

            modelBuilder.Entity("DemoCoreAPI.DomainModels.Models.SchoolPhoneNumberDb", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("SchoolId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("SchoolId");

                    b.ToTable("SchoolPhoneNumbers");
                });

            modelBuilder.Entity("DemoCoreAPI.DomainModels.Models.TeacherDb", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("AddressId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Patronymic")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("ProfessionalCategory")
                        .HasColumnType("int");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.Property<long?>("SchoolId")
                        .HasColumnType("bigint");

                    b.Property<int>("Specialization")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AddressId");

                    b.HasIndex("SchoolId");

                    b.ToTable("Teachers");
                });

            modelBuilder.Entity("DemoCoreAPI.DomainModels.Models.VicePrincipalDb", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("ManagementArea")
                        .HasColumnType("int");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Patronymic")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.Property<long?>("SchoolId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("SchoolId");

                    b.ToTable("VicePrincipals");
                });

            modelBuilder.Entity("DemoCoreAPI.DomainModels.Models.AddressDb", b =>
                {
                    b.HasOne("DemoCoreAPI.DomainModels.Models.ParentDb", "Parent")
                        .WithOne("Address")
                        .HasForeignKey("DemoCoreAPI.DomainModels.Models.AddressDb", "ParentDbId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DemoCoreAPI.DomainModels.Models.PrincipalDb", "Principal")
                        .WithOne("Address")
                        .HasForeignKey("DemoCoreAPI.DomainModels.Models.AddressDb", "PrincipalDbId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DemoCoreAPI.DomainModels.Models.PupilDb", "Pupil")
                        .WithOne("Address")
                        .HasForeignKey("DemoCoreAPI.DomainModels.Models.AddressDb", "PupilDbId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DemoCoreAPI.DomainModels.Models.SchoolDb", "School")
                        .WithOne("Address")
                        .HasForeignKey("DemoCoreAPI.DomainModels.Models.AddressDb", "SchoolDbId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DemoCoreAPI.DomainModels.Models.ClassDb", b =>
                {
                    b.HasOne("DemoCoreAPI.DomainModels.Models.SchoolDb", "School")
                        .WithMany("Classes")
                        .HasForeignKey("SchoolId");
                });

            modelBuilder.Entity("DemoCoreAPI.DomainModels.Models.ClassTeacherDb", b =>
                {
                    b.HasOne("DemoCoreAPI.DomainModels.Models.ClassDb", "Class")
                        .WithMany("ClassTeachers")
                        .HasForeignKey("ClassDbId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DemoCoreAPI.DomainModels.Models.TeacherDb", "Teacher")
                        .WithMany("ClassTeachers")
                        .HasForeignKey("TeacherDbId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DemoCoreAPI.DomainModels.Models.ParentPupilDb", b =>
                {
                    b.HasOne("DemoCoreAPI.DomainModels.Models.ParentDb", "Parent")
                        .WithMany("ParentPupils")
                        .HasForeignKey("ParentDbId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DemoCoreAPI.DomainModels.Models.PupilDb", "Pupil")
                        .WithMany("ParentPupils")
                        .HasForeignKey("PupilDbId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DemoCoreAPI.DomainModels.Models.PrincipalDb", b =>
                {
                    b.HasOne("DemoCoreAPI.DomainModels.Models.SchoolDb", "School")
                        .WithOne("Principal")
                        .HasForeignKey("DemoCoreAPI.DomainModels.Models.PrincipalDb", "SchoolDbId");
                });

            modelBuilder.Entity("DemoCoreAPI.DomainModels.Models.PupilDb", b =>
                {
                    b.HasOne("DemoCoreAPI.DomainModels.Models.ClassDb", "Class")
                        .WithMany("Pupils")
                        .HasForeignKey("ClassId");

                    b.HasOne("DemoCoreAPI.DomainModels.Models.SchoolDb", "School")
                        .WithMany("Pupils")
                        .HasForeignKey("SchoolId");
                });

            modelBuilder.Entity("DemoCoreAPI.DomainModels.Models.SchoolAddressDb", b =>
                {
                    b.HasOne("DemoCoreAPI.DomainModels.Models.SchoolDb", "School")
                        .WithMany()
                        .HasForeignKey("SchoolDbId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DemoCoreAPI.DomainModels.Models.SchoolPhoneNumberDb", b =>
                {
                    b.HasOne("DemoCoreAPI.DomainModels.Models.SchoolDb", "School")
                        .WithMany("SchoolPhoneNumbers")
                        .HasForeignKey("SchoolId");
                });

            modelBuilder.Entity("DemoCoreAPI.DomainModels.Models.TeacherDb", b =>
                {
                    b.HasOne("DemoCoreAPI.DomainModels.Models.AddressDb", "Address")
                        .WithMany()
                        .HasForeignKey("AddressId");

                    b.HasOne("DemoCoreAPI.DomainModels.Models.SchoolDb", "School")
                        .WithMany("Teachers")
                        .HasForeignKey("SchoolId");
                });

            modelBuilder.Entity("DemoCoreAPI.DomainModels.Models.VicePrincipalDb", b =>
                {
                    b.HasOne("DemoCoreAPI.DomainModels.Models.SchoolDb", "School")
                        .WithMany("VicePrincipals")
                        .HasForeignKey("SchoolId");
                });
#pragma warning restore 612, 618
        }
    }
}
